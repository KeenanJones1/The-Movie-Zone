{"ast":null,"code":"var _jsxFileName = \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { colors } from '../utils/_var';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n color: white;\n width: 325px;\n margin: 1rem;\n position: relative;\n transition: all ease-in-out 0.3s;\n cursor: pointer;\n\n .movie-content{\n  background-color: ${colors.$background};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n  flex-direction: column;\n }\n\n\n .img-container > img {\n  width: 100%;\n  transition: all ease-in 0.2s;\n}\n\n img{\n  height: 430px;\n  background-color: beige;\n  overflow-y: hidden;\n  position: relative;\n  background-color: ${colors.$black};\n  padding: 0;\n }\n\n .movie-name{\n  font-weight: bold;\n  font-size: 1rem;\n  h3{\n   margin-top: 0;\n  }\n }\n\n .movie-thumbs{\n  font-weight: bold;\n  padding: 5px 10px;\n  background-color: ${colors.$secondary};\n  color: #f5cc5b;\n  border-radius: 5px;\n\n  .icons{\n   margin-right: 1.5em;\n   padding-left: 1em;\n  }\n\n  .icon-liked{\n   color: ${colors.$primary}\n  }\n\n  .icon-disliked{\n   color: ${colors.$primary}\n  }\n\n\n  .icons:hover{\n   color: ${colors.$primary};\n  }\n }\n\n`;\n_c = Wrapper;\n\nconst Movie = ({\n  movie,\n  updateMovies\n}) => {\n  _s();\n\n  const [liked, setLiked] = useState(false);\n\n  const handleThumbs = (id, name) => {\n    const uuid = localStorage.getItem('uuid');\n    const options = {\n      method: 'POST',\n      url: `http://localhost:3000/movies/`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: {\n        uuid: uuid,\n        query: movie.id,\n        thumbs: name,\n        title: movie.title\n      }\n    };\n    axios.request(options).then(resp => {\n      updateMovies(resp.data.movies);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.image,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-name\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-thumbs\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.up_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faThumbsUp,\n          className: movie.liked ? 'icon-liked' : 'icons',\n          onClick: () => handleThumbs(movie.id, 'up')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.down_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faThumbsDown,\n          className: movie.disliked ? 'icon-disliked' : 'icons',\n          onClick: () => handleThumbs(movie.id, 'down')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Movie, \"5oFMLl0KA2P+7Df5hTCAaQ+yYE8=\");\n\n_c2 = Movie;\nexport default Movie;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Movie\");","map":{"version":3,"sources":["/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Movie.js"],"names":["React","useState","useEffect","styled","axios","colors","FontAwesomeIcon","faThumbsUp","faThumbsDown","Wrapper","div","$background","$black","$secondary","$primary","Movie","movie","updateMovies","liked","setLiked","handleThumbs","id","name","uuid","localStorage","getItem","options","method","url","headers","data","query","thumbs","title","request","then","resp","movies","catch","err","console","log","image","up_count","down_count","disliked"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport {colors} from '../utils/_var'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons'\n\nconst Wrapper = styled.div`\n color: white;\n width: 325px;\n margin: 1rem;\n position: relative;\n transition: all ease-in-out 0.3s;\n cursor: pointer;\n\n .movie-content{\n  background-color: ${colors.$background};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n  flex-direction: column;\n }\n\n\n .img-container > img {\n  width: 100%;\n  transition: all ease-in 0.2s;\n}\n\n img{\n  height: 430px;\n  background-color: beige;\n  overflow-y: hidden;\n  position: relative;\n  background-color: ${colors.$black};\n  padding: 0;\n }\n\n .movie-name{\n  font-weight: bold;\n  font-size: 1rem;\n  h3{\n   margin-top: 0;\n  }\n }\n\n .movie-thumbs{\n  font-weight: bold;\n  padding: 5px 10px;\n  background-color: ${colors.$secondary};\n  color: #f5cc5b;\n  border-radius: 5px;\n\n  .icons{\n   margin-right: 1.5em;\n   padding-left: 1em;\n  }\n\n  .icon-liked{\n   color: ${colors.$primary}\n  }\n\n  .icon-disliked{\n   color: ${colors.$primary}\n  }\n\n\n  .icons:hover{\n   color: ${colors.$primary};\n  }\n }\n\n`\n\nconst Movie = ({movie, updateMovies}) => {\n const [liked, setLiked] = useState(false);\n\n const handleThumbs = (id, name) => {\n  const uuid = localStorage.getItem('uuid')\n  const options = {\n   method: 'POST',\n   url: `http://localhost:3000/movies/`,\n   headers: {'Content-Type': 'application/json'},\n   data: {uuid: uuid, query: movie.id, thumbs: name, title: movie.title}\n  }\n  axios.request(options).then((resp) =>{\n    updateMovies(resp.data.movies)\n  }).catch((err) => console.log(err))\n }\n\n\n\n return (\n  <Wrapper>\n   <div className=\"img-container\">\n    <img src={movie.image} alt={movie.title} />\n   </div>\n\n   <div className=\"movie-content\">\n    <div className=\"movie-name\">\n     <h3>{movie.title}</h3>\n    </div>\n    <div className=\"movie-thumbs\">\n     {/* highlight icon if user has liked or disliked in the past */}\n      <p>{movie.up_count}</p>\n      <FontAwesomeIcon icon={faThumbsUp} className={movie.liked ? 'icon-liked' : 'icons'} onClick={() => handleThumbs(movie.id, 'up')}/>\n\n  <p>{movie.down_count}</p>\n     <FontAwesomeIcon icon={faThumbsDown} className={movie.disliked ? 'icon-disliked' : 'icons'} onClick={() => handleThumbs(movie.id, 'down')}/>\n    </div>\n   </div>\n  </Wrapper>\n )\n}\n\nexport default Movie\n"]},"metadata":{},"sourceType":"module"}