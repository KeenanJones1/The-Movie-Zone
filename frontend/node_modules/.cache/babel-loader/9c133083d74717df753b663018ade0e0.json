{"ast":null,"code":"var _jsxFileName = \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  color: white;\n `;\n_c = Wrapper;\n\nconst Search = ({\n  setMovies,\n  likesCount\n}) => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [seenMovies, setSeenMovies] = useState([]);\n\n  const movieFetch = data => {\n    const movieQueries = [];\n    const uuid = localStorage.getItem('uuid');\n    data.titles.map(query => movieQueries.push(query.id));\n    const options = {\n      method: 'GET',\n      url: `http://localhost:3000/movies/`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      params: {\n        queries: movieQueries,\n        uuid: uuid\n      }\n    };\n    axios.request(options).then(resp => {\n      console.log(resp.data.movies);\n      likesCount(resp.data.movies);\n      setMovies(resp.data.titles);\n    }).catch(error => console.log(error));\n  };\n\n  const handleForm = e => {\n    e.preventDefault();\n    const options = {\n      method: 'GET',\n      url: `${process.env.REACT_APP_API_BASE_URL}search/${title}`,\n      headers: {\n        'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY,\n        'x-rapidapi-host': process.env.REACT_APP_API_HOST\n      }\n    };\n    axios.request(options).then(function (response) {\n      movieFetch(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => handleForm(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Search, \"r/AJA/i7i/q/FT/gEQZcc2MBwVk=\");\n\n_c2 = Search;\nexport default Search;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"sources":["/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Search.js"],"names":["React","useState","useEffect","styled","axios","Wrapper","div","Search","setMovies","likesCount","title","setTitle","seenMovies","setSeenMovies","movieFetch","data","movieQueries","uuid","localStorage","getItem","titles","map","query","push","id","options","method","url","headers","params","queries","request","then","resp","console","log","movies","catch","error","handleForm","e","preventDefault","process","env","REACT_APP_API_BASE_URL","REACT_APP_RAPID_API_KEY","REACT_APP_API_HOST","response","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\n\n\n const Wrapper = styled.div`\n  color: white;\n `\n\nconst Search = ({setMovies, likesCount}) => {\n const [title, setTitle] = useState('')\n const [seenMovies, setSeenMovies] = useState([])\n\nconst movieFetch = (data) => {\n const movieQueries = []\n const uuid = localStorage.getItem('uuid')\n  data.titles.map( query => movieQueries.push(query.id))\n  const options = {\n   method: 'GET',\n   url: `http://localhost:3000/movies/`,\n   headers: {'Content-Type': 'application/json'},\n   params: {queries: movieQueries, uuid: uuid}\n  }\n\n  axios.request(options).then((resp) => {\n    console.log(resp.data.movies)\n    likesCount(resp.data.movies);\n    setMovies(resp.data.titles);\n  }\n  ).catch((error) => console.log(error))\n}\n \n\n\n\n const handleForm = (e) => {\n  e.preventDefault()\n  const options = {\n   method: 'GET',\n   url: `${process.env.REACT_APP_API_BASE_URL}search/${title}`,\n   headers: {\n    'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY,\n    'x-rapidapi-host': process.env.REACT_APP_API_HOST\n   }\n  }\n\n  axios.request(options).then(function (response) {\n   movieFetch(response.data)\n  }).catch(function (error) {\n   console.error(error);\n  });\n }\n\n\n\n\n\n\n return (\n  <Wrapper>\n   <form onSubmit={(event) => handleForm(event)}>\n    <input type=\"text\" onChange={(event) => setTitle(event.target.value)}/>\n    <input type=\"submit\" value=\"submit\" />\n   </form>\n  </Wrapper>\n )\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}