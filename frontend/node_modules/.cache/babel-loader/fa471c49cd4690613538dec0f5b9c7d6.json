{"ast":null,"code":"var _jsxFileName = \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Movie from './Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  padding: 2rem 0;\n  line-height: 1.5;\n  margin: 2rem;\n  \n\n  @media(min-width: 576px){\n   .center{\n    display: flex;\n    justify-content: space-between; \n    flex-wrap: wrap;\n    padding: 0 4rem;\n    }\n\n    .movie{\n    flex: 0 0 calc(50% - 1rem);\n    margin-bottom: 1rem;\n    }\n   }\n\n   @media(min-width: 992px){\n   .movie{\n    flex: 0 0 calc(33.33% - 1rem);\n    margin-bottom: 1rem;\n   }\n  }\n\n  @media(min-width: 1170px){\n   .movie{\n    display: flex; \n    text-align: left;\n   }\n  }\n`;\n_c = Wrapper;\n\nconst Movies = ({\n  movies,\n  updateMovie\n}) => {\n  _s();\n\n  const [newMovies, setNewMovies] = useState([]); // checking if any movie from the api, has been liked or disliked by user \n\n  const checkUserMovies = (liked, disliked, movies) => {\n    // queries are an unique string from the rapid api \n    let liked_queries = [];\n    let disliked_queries = [];\n    let newMovies = [];\n\n    for (let i = 0; liked.length > i; i++) {\n      liked_queries.push(liked[i].movie.query);\n    }\n\n    for (let i = 0; disliked.length > i; i++) {\n      disliked_queries.push(disliked[i].movie.query);\n    }\n\n    for (let i = 0; movies.length > i; i++) {\n      if (liked_queries.includes(movies[i].id)) {\n        let temp = { ...movies[i]\n        };\n        temp['liked'] = true;\n        temp['disliked'] = false;\n        newMovies.push(temp);\n      } else if (disliked_queries.includes(movies[i].id)) {\n        let temp = { ...movies[i]\n        };\n        temp['disliked'] = true;\n        temp['liked'] = false;\n        newMovies.push(temp);\n      } else {\n        let temp = { ...movies[i]\n        };\n        temp['liked'] = false;\n        temp['disliked'] = false;\n        newMovies.push(temp);\n      }\n    }\n\n    debugger;\n    setNewMovies(newMovies);\n  }; // getting movies liked and disliked by user from past\n\n\n  const getUserMovies = () => {\n    const uuid = localStorage.getItem('uuid');\n    const options = {\n      method: 'GET',\n      url: `https://pacific-beach-65675.herokuapp.com/users/${uuid}/`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    axios.request(options).then(resp => {\n      checkUserMovies(resp.data.likes, resp.data.dislikes, movies);\n    }).catch(err => console.log(err));\n  }; // render movie component, after checking if user has liked  or disliked in the past. \n\n\n  const renderMovies = () => {\n    if (newMovies.length > 0) {\n      return newMovies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        movie: movie,\n        className: \"movie\",\n        updateMovie: updateMovie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this));\n    } else {\n      return movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        movie: movie,\n        className: \"movie\",\n        updateMovie: updateMovie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this));\n    }\n  };\n\n  console.log(movies);\n  useEffect(() => {\n    getUserMovies();\n  }, [newMovies]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: movies.length ? renderMovies() : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Movies, \"Ym+e+Eulckesy8PU/cTsF5ZxIrY=\");\n\n_c2 = Movies;\nexport default Movies;\nMovies.propTypes = {\n  movies: PropTypes.array.isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Movies\");","map":{"version":3,"sources":["/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Movies.js"],"names":["React","useState","useEffect","PropTypes","axios","styled","Movie","Wrapper","div","Movies","movies","updateMovie","newMovies","setNewMovies","checkUserMovies","liked","disliked","liked_queries","disliked_queries","i","length","push","movie","query","includes","id","temp","getUserMovies","uuid","localStorage","getItem","options","method","url","headers","request","then","resp","data","likes","dislikes","catch","err","console","log","renderMovies","map","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport Movie from './Movie'\n\nconst Wrapper = styled.div`\n  padding: 2rem 0;\n  line-height: 1.5;\n  margin: 2rem;\n  \n\n  @media(min-width: 576px){\n   .center{\n    display: flex;\n    justify-content: space-between; \n    flex-wrap: wrap;\n    padding: 0 4rem;\n    }\n\n    .movie{\n    flex: 0 0 calc(50% - 1rem);\n    margin-bottom: 1rem;\n    }\n   }\n\n   @media(min-width: 992px){\n   .movie{\n    flex: 0 0 calc(33.33% - 1rem);\n    margin-bottom: 1rem;\n   }\n  }\n\n  @media(min-width: 1170px){\n   .movie{\n    display: flex; \n    text-align: left;\n   }\n  }\n`\n\n\nconst Movies = ({movies, updateMovie}) => {\n  const [newMovies, setNewMovies] = useState([])\n\n  // checking if any movie from the api, has been liked or disliked by user \n  const checkUserMovies = (liked, disliked, movies) => {\n    // queries are an unique string from the rapid api \n    let liked_queries = []\n    let disliked_queries = []\n    let newMovies = []\n\n\n    for(let i = 0; liked.length > i; i++){\n      liked_queries.push(liked[i].movie.query)\n    }\n\n    for(let i = 0; disliked.length > i; i++){\n      disliked_queries.push(disliked[i].movie.query)\n    }\n\n    for(let i = 0; movies.length > i; i++){\n      if(liked_queries.includes(movies[i].id)){\n        let temp = {...movies[i]}\n        temp['liked'] = true\n        temp['disliked'] = false\n        newMovies.push(temp)\n      }\n      else if(disliked_queries.includes(movies[i].id)){\n        let temp = {...movies[i]}\n        temp['disliked'] = true\n        temp['liked'] = false\n        newMovies.push(temp)\n      }\n      else{\n        let temp = {...movies[i]}\n        temp['liked'] = false\n        temp['disliked'] = false\n        newMovies.push(temp)\n      }\n    }\n\n    debugger\n    setNewMovies(newMovies)\n  }\n\n  // getting movies liked and disliked by user from past\n const getUserMovies = () => {\n  const uuid = localStorage.getItem('uuid')\n  const options = {\n   method: 'GET',\n   url: `https://pacific-beach-65675.herokuapp.com/users/${uuid}/`,\n   headers: {'Content-Type': 'application/json'},\n  }\n    axios.request(options).then((resp) =>{\n     checkUserMovies(resp.data.likes, resp.data.dislikes, movies)\n    }).catch((err) => console.log(err))\n }\n\n\n\n\n\n// render movie component, after checking if user has liked  or disliked in the past. \n const renderMovies = () => {\n   if(newMovies.length > 0){\n     return newMovies.map( movie => \n      <Movie movie={movie} className=\"movie\" key={movie.id} updateMovie={updateMovie}/>\n     )\n   }else{\n    return movies.map( movie => \n      <Movie movie={movie} className=\"movie\" key={movie.id} updateMovie={updateMovie}/>\n     )\n   }\n }\n\n console.log(movies)\n\nuseEffect(() => {\n  getUserMovies()\n}, [newMovies])\n\n return (\n  <Wrapper>\n  <div className=\"center\">\n   {movies.length ? renderMovies() : null}\n  </div>\n  </Wrapper>\n )\n}\n\nexport default Movies\n\nMovies.propTypes = {\n  movies: PropTypes.array.isRequired\n};"]},"metadata":{},"sourceType":"module"}