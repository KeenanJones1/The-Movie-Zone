{"ast":null,"code":"var _jsxFileName = \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { v4 } from 'uuid';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { colors } from '../utils/_var';\nimport Header from './Header';\nimport Movies from './Movies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n background-color: ${colors.$black};\n display: flex;\n flex-direction: column;\n min-height: 100vh;\n padding: 0;\n margin: 0;\n`;\n_c = Wrapper;\n\nconst Home = () => {\n  _s();\n\n  const [uuid, setUuid] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [seenMovies, setSeenMovies] = useState([]);\n  const [rapidMovies, setRapidMovies] = useState([]); //  checking if user has a uuid in the localstorage, if not create an uuid and set to localStorage. \n\n  const checkLocalStorage = () => {\n    let userCode = localStorage.getItem('uuid');\n\n    if (userCode) {\n      setUuid(userCode);\n    } else {\n      userCode = v4();\n      const options = {\n        method: 'POST',\n        url: 'http://localhost:3000/users',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: {\n          uuid: userCode\n        }\n      };\n      localStorage.setItem('uuid', userCode); // start loading animation here\n\n      axios.request(options).then(response => {\n        console.log(response.data); // stop loading animation here\n      }).catch(error => console.log(error));\n      setUuid(userCode);\n    }\n  };\n\n  useEffect(() => {\n    checkLocalStorage();\n  }); // add movies to the state\n\n  const settingMoviesToState = (backendData, apiData) => {\n    console.log(backendData);\n\n    if (seenMovies.length && backendData.length == 1) {\n      // get the updated movie\n      console.log(backendData); // change the updated movie \n      // configMovies\n    } else {\n      configMovies(apiData, backendData);\n    }\n  }; // setting likes and dislikes from backend to each movie obj from rapid api\n\n\n  const configMovies = (apiMovies, backendMovies) => {\n    let configedMovies = [];\n\n    for (let i in apiMovies) {\n      if (backendMovies.find(movie => movie['query'] === apiMovies[i].id)) {\n        let backendMovie = backendMovies.find(movie => movie['query'] === apiMovies[i].id);\n        let tempObj = { ...apiMovies[i]\n        };\n        tempObj['up_count'] = backendMovie['up_count'];\n        tempObj['down_count'] = backendMovie['down_count'];\n        configedMovies.push(tempObj);\n      } else {\n        let tempObj = { ...apiMovies[i]\n        };\n        tempObj['up_count'] = 0;\n        tempObj['down_count'] = 0;\n        configedMovies.push(tempObj);\n      }\n    }\n\n    setSeenMovies(backendMovies);\n    setRapidMovies(apiMovies);\n    setMovies(configedMovies);\n  };\n\n  const updateMovies = backendMovies => {\n    settingMoviesToState(backendMovies, rapidMovies);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      configMovies: settingMoviesToState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Movies, {\n      movies: movies,\n      seenMovies: seenMovies,\n      updateMovies: updateMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Home, \"yFSMbJp67sJDBwzUYSyyz0Ck8Gk=\");\n\n_c2 = Home;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Home.js"],"names":["React","useState","useEffect","v4","axios","styled","colors","Header","Movies","Wrapper","div","$black","Home","uuid","setUuid","movies","setMovies","seenMovies","setSeenMovies","rapidMovies","setRapidMovies","checkLocalStorage","userCode","localStorage","getItem","options","method","url","headers","data","setItem","request","then","response","console","log","catch","error","settingMoviesToState","backendData","apiData","length","configMovies","apiMovies","backendMovies","configedMovies","i","find","movie","id","backendMovie","tempObj","push","updateMovies"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { v4 } from 'uuid';\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport {colors} from '../utils/_var'\nimport Header from './Header'\nimport Movies from './Movies'\n\nconst Wrapper = styled.div`\n background-color: ${colors.$black};\n display: flex;\n flex-direction: column;\n min-height: 100vh;\n padding: 0;\n margin: 0;\n`\n\n\n\nconst Home = () => {\n const [uuid, setUuid] = useState('')\n const [movies, setMovies] = useState([])\n const [seenMovies, setSeenMovies] = useState([])\n const [rapidMovies, setRapidMovies] = useState([])\n\n//  checking if user has a uuid in the localstorage, if not create an uuid and set to localStorage. \n const checkLocalStorage = () => {\n  let userCode = localStorage.getItem('uuid')\n  if(userCode){\n   setUuid(userCode)\n  }else{\n   userCode = v4()\n   const options = {\n    method: 'POST',\n    url: 'http://localhost:3000/users',\n    headers: {'Content-Type': 'application/json'},\n    data: {uuid: userCode}\n   }\n\n   localStorage.setItem('uuid', userCode)\n\n   // start loading animation here\n\n   axios.request(options).then((response) => {\n     console.log(response.data)\n     // stop loading animation here\n   }).catch((error) => console.log(error))\n   setUuid(userCode)\n  }\n }\n\n useEffect(() => {\n  checkLocalStorage()\n })\n\n // add movies to the state\n const settingMoviesToState = (backendData, apiData) => {\n   console.log(backendData)\n   if(seenMovies.length && backendData.length == 1){\n      // get the updated movie\n      console.log(backendData)\n      // change the updated movie \n      // configMovies\n   }else{\n     configMovies(apiData, backendData)\n   }\n\n }\n\n\n\n// setting likes and dislikes from backend to each movie obj from rapid api\nconst configMovies = (apiMovies, backendMovies) => {\n  let configedMovies = []\n  for(let i in apiMovies){\n    if(backendMovies.find(movie => movie['query'] === apiMovies[i].id)){\n      let backendMovie = backendMovies.find(movie => movie['query'] === apiMovies[i].id)\n      let tempObj = {...apiMovies[i]}\n      tempObj['up_count'] = backendMovie['up_count']\n      tempObj['down_count'] = backendMovie['down_count']\n      configedMovies.push(tempObj)\n    }else{\n      let tempObj = {...apiMovies[i]}\n      tempObj['up_count'] = 0\n      tempObj['down_count'] = 0\n      configedMovies.push(tempObj)\n    }\n  }\n  setSeenMovies(backendMovies)\n  setRapidMovies(apiMovies)\n  setMovies(configedMovies)\n}\n\nconst updateMovies = (backendMovies) => {\n  settingMoviesToState(backendMovies, rapidMovies)\n}\n\n\n\n\n return (\n  <Wrapper>\n    <Header configMovies={settingMoviesToState} />\n    <Movies movies={movies} seenMovies={seenMovies} updateMovies={updateMovies}/>\n  </Wrapper>\n )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}