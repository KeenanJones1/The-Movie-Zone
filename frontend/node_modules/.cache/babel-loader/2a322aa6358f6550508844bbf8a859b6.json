{"ast":null,"code":"var _jsxFileName = \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { v4 } from 'uuid';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { colors } from '../utils/_var';\nimport Header from './Header';\nimport Movies from './Movies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n background-color: ${colors.$black};\n display: flex;\n flex-direction: column;\n min-height: 100vh;\n padding: 0;\n margin: 0;\n`;\n_c = Wrapper;\n\nconst Home = () => {\n  _s();\n\n  const [uuid, setUuid] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [seenMovies, setSeenMovies] = useState([]);\n  const [rapidMovies, setRapidMovies] = useState([]); //  checking if user has a uuid in the localstorage, if not create an uuid and set to localStorage. \n\n  const checkLocalStorage = () => {\n    let userCode = localStorage.getItem('uuid');\n\n    if (userCode) {\n      setUuid(userCode);\n    } else {\n      userCode = v4();\n      const options = {\n        method: 'POST',\n        url: 'http://localhost:3000/users',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: {\n          uuid: userCode\n        }\n      };\n      localStorage.setItem('uuid', userCode); // start loading animation here\n\n      axios.request(options).then(response => {\n        console.log(response.data); // stop loading animation here\n      }).catch(error => console.log(error));\n      setUuid(userCode);\n    }\n  };\n\n  useEffect(() => {\n    checkLocalStorage();\n  }); // add movies to the state\n  //  const settingMoviesToState = (backendData, apiData) => {\n  //    console.log(backendData)\n  //    if(seenMovies.length && backendData.length == 1){\n  //       // get the updated movie\n  //       console.log(backendData, 'hey')\n  //       // change the updated movie \n  //       // configMovies\n  //    }else{\n  //      configMovies(apiData, backendData)\n  //    }\n  //  }\n  // setting likes and dislikes from backend to each movie obj from rapid api\n  // const configMovies = (apiMovies, backendMovies) => {\n  // }\n  // const updateMovies = (backendMovies) => {\n  //   console.log(backendMovies)\n  //   settingMoviesToState(backendMovies, rapidMovies)\n  // }\n  // let configedMovies = []\n  // if(backendMovies.length === 0){\n  //   let temp = [...apiMovies]\n  //   temp.map(movie => {\n  //     movie['up_count'] = 0\n  //     movie['down_count'] = 0\n  //   })\n  //   setMovies(temp)\n  // }else{\n  //   for(let i in apiMovies){\n  //       if(backendMovies.find(movie => movie['query'] === apiMovies[i].id)){\n  //       let backendMovie = backendMovies.find(movie => movie['query'] === apiMovies[i].id)\n  //       let tempObj = {...apiMovies[i]}\n  //       tempObj['up_count'] = backendMovie['up_count']\n  //       tempObj['down_count'] = backendMovie['down_count']\n  //       configedMovies.push(tempObj)\n  //       setMovies(configedMovies)\n  //     }\n  //   }\n  // }\n  // setSeenMovies(backendMovies)\n  // setRapidMovies(apiMovies)\n\n  const configMovies = (backendData, rapidData) => {\n    if (backendData.length == 0) {\n      let newData = [...rapidData];\n      newData.map(movie => {\n        movie['up_count'] = 0;\n        movie['down_count'] = 0;\n        movie['liked'] = false;\n        movie['disliked'] = false;\n      });\n      setMovies(newData);\n    } else {\n      console.log(backendData);\n    }\n  };\n\n  const updateMovie = c => {\n    //  updates \n    let movie = movies.find(movie => movie.id === c.query);\n    movie['up_count'] = c.up_count;\n    movie['down_count'] = c.down_count;\n    let newMovies = [...movies];\n    setMovies(newMovies);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      configMovies: configMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Movies, {\n      movies: movies,\n      seenMovies: seenMovies,\n      updateMovie: updateMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Home, \"yFSMbJp67sJDBwzUYSyyz0Ck8Gk=\");\n\n_c2 = Home;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Home.js"],"names":["React","useState","useEffect","v4","axios","styled","colors","Header","Movies","Wrapper","div","$black","Home","uuid","setUuid","movies","setMovies","seenMovies","setSeenMovies","rapidMovies","setRapidMovies","checkLocalStorage","userCode","localStorage","getItem","options","method","url","headers","data","setItem","request","then","response","console","log","catch","error","configMovies","backendData","rapidData","length","newData","map","movie","updateMovie","c","find","id","query","up_count","down_count","newMovies"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { v4 } from 'uuid';\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport {colors} from '../utils/_var'\nimport Header from './Header'\nimport Movies from './Movies'\n\nconst Wrapper = styled.div`\n background-color: ${colors.$black};\n display: flex;\n flex-direction: column;\n min-height: 100vh;\n padding: 0;\n margin: 0;\n`\n\n\n\nconst Home = () => {\n const [uuid, setUuid] = useState('')\n const [movies, setMovies] = useState([])\n const [seenMovies, setSeenMovies] = useState([])\n const [rapidMovies, setRapidMovies] = useState([])\n\n//  checking if user has a uuid in the localstorage, if not create an uuid and set to localStorage. \n const checkLocalStorage = () => {\n  let userCode = localStorage.getItem('uuid')\n  if(userCode){\n   setUuid(userCode)\n  }else{\n   userCode = v4()\n   const options = {\n    method: 'POST',\n    url: 'http://localhost:3000/users',\n    headers: {'Content-Type': 'application/json'},\n    data: {uuid: userCode}\n   }\n\n   localStorage.setItem('uuid', userCode)\n\n   // start loading animation here\n\n   axios.request(options).then((response) => {\n     console.log(response.data)\n     // stop loading animation here\n   }).catch((error) => console.log(error))\n   setUuid(userCode)\n  }\n }\n\n useEffect(() => {\n  checkLocalStorage()\n })\n\n // add movies to the state\n//  const settingMoviesToState = (backendData, apiData) => {\n//    console.log(backendData)\n//    if(seenMovies.length && backendData.length == 1){\n//       // get the updated movie\n//       console.log(backendData, 'hey')\n//       // change the updated movie \n//       // configMovies\n//    }else{\n//      configMovies(apiData, backendData)\n//    }\n\n//  }\n\n\n\n// setting likes and dislikes from backend to each movie obj from rapid api\n// const configMovies = (apiMovies, backendMovies) => {\n \n// }\n\n// const updateMovies = (backendMovies) => {\n//   console.log(backendMovies)\n//   settingMoviesToState(backendMovies, rapidMovies)\n// }\n\n\n// let configedMovies = []\n// if(backendMovies.length === 0){\n//   let temp = [...apiMovies]\n//   temp.map(movie => {\n//     movie['up_count'] = 0\n//     movie['down_count'] = 0\n//   })\n//   setMovies(temp)\n// }else{\n//   for(let i in apiMovies){\n//       if(backendMovies.find(movie => movie['query'] === apiMovies[i].id)){\n//       let backendMovie = backendMovies.find(movie => movie['query'] === apiMovies[i].id)\n//       let tempObj = {...apiMovies[i]}\n//       tempObj['up_count'] = backendMovie['up_count']\n//       tempObj['down_count'] = backendMovie['down_count']\n//       configedMovies.push(tempObj)\n//       setMovies(configedMovies)\n//     }\n//   }\n// }\n// setSeenMovies(backendMovies)\n// setRapidMovies(apiMovies)\n\n const configMovies = (backendData, rapidData) => {\n\n\n  if(backendData.length == 0){\n    let newData = [...rapidData]\n    newData.map(movie => {\n      movie['up_count'] = 0\n      movie['down_count'] = 0\n      movie['liked'] = false\n      movie['disliked'] = false\n    })\n    setMovies(newData)\n  }else{\n    console.log(backendData)\n  }\n }\n\n const updateMovie = (c) => {\n  //  updates \n\n  let movie = movies.find(movie => movie.id === c.query)\n  movie['up_count'] = c.up_count\n  movie['down_count'] = c.down_count\n  let newMovies = [...movies]\n  setMovies(newMovies)\n }\n\n return (\n  <Wrapper>\n    <Header configMovies={configMovies} />\n    <Movies movies={movies} seenMovies={seenMovies} updateMovie={updateMovie}/>\n  </Wrapper>\n )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}