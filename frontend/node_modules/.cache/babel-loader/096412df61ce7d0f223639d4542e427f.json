{"ast":null,"code":"var _jsxFileName = \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { v4 } from 'uuid';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { colors } from '../utils/_var';\nimport Header from './Header';\nimport Movies from './Movies';\nimport { useTransition, animated } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n background-color: ${colors.$black};\n display: flex;\n flex-direction: column;\n min-height: 100vh;\n padding: 0;\n margin: 0;\n`;\n_c = Wrapper;\n\nconst Home = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [loaded, setLoaded] = useState(false); //  checking if user has a uuid in the localstorage, if not create an uuid and set to localStorage. \n\n  const checkLocalStorage = () => {\n    let userCode = localStorage.getItem('uuid');\n\n    if (userCode) {\n      return null;\n    } else {\n      userCode = v4();\n      const options = {\n        method: 'POST',\n        url: 'http://localhost:3000/users',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: {\n          uuid: userCode\n        }\n      };\n      localStorage.setItem('uuid', userCode); // start loading animation here\n\n      axios.request(options).then(response => {\n        console.log(response.data); // stop loading animation here\n      }).catch(error => console.log(error));\n    }\n  };\n\n  useEffect(() => {\n    checkLocalStorage();\n    setLoaded(true);\n  }, []); // add movies to the state\n\n  const configMovies = (backendData, rapidData) => {\n    if (backendData.length === 0) {\n      let newData = [...rapidData];\n      newData.map(movie => {\n        movie['up_count'] = 0;\n        movie['down_count'] = 0;\n        movie['liked'] = false;\n        movie['disliked'] = false;\n      });\n      setMovies(newData);\n    } else {\n      let configedMovies = [];\n\n      for (let i in rapidData) {\n        let backendMovie = backendData.find(movie => movie['query'] === rapidData[i].id);\n\n        if (backendMovie) {\n          let tempObj = { ...rapidData[i]\n          };\n          tempObj['up_count'] = backendMovie['up_count'];\n          tempObj['down_count'] = backendMovie['down_count'];\n          configedMovies.push(tempObj);\n        } else {\n          let tempObj = { ...rapidData[i]\n          };\n          tempObj['up_count'] = 0;\n          tempObj['down_count'] = 0;\n          configedMovies.push(tempObj);\n        }\n      }\n\n      setMovies(configedMovies);\n    }\n  }; //  update movie up count or down count\n\n\n  const updateMovie = c => {\n    let movie = movies.find(movie => movie.id === c.query);\n    movie['up_count'] = c.up_count;\n    movie['down_count'] = c.down_count;\n    let newMovies = [...movies];\n    setMovies(newMovies);\n  };\n\n  const transition = useTransition(loaded, {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [transition((style, item) => item ? /*#__PURE__*/_jsxDEV(Header, {\n      configMovies: configMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 14\n    }, this) : null), /*#__PURE__*/_jsxDEV(Movies, {\n      movies: movies,\n      updateMovie: updateMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Home, \"ff4Uva8WmT9B7uTQvBPJYQerRns=\", false, function () {\n  return [useTransition];\n});\n\n_c2 = Home;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Home.js"],"names":["React","useState","useEffect","v4","axios","styled","colors","Header","Movies","useTransition","animated","Wrapper","div","$black","Home","movies","setMovies","loaded","setLoaded","checkLocalStorage","userCode","localStorage","getItem","options","method","url","headers","data","uuid","setItem","request","then","response","console","log","catch","error","configMovies","backendData","rapidData","length","newData","map","movie","configedMovies","i","backendMovie","find","id","tempObj","push","updateMovie","c","query","up_count","down_count","newMovies","transition","from","opacity","enter","style","item"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { v4 } from 'uuid';\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport {colors} from '../utils/_var'\nimport Header from './Header'\nimport Movies from './Movies'\nimport {useTransition, animated} from 'react-spring'\n\nconst Wrapper = styled.div`\n background-color: ${colors.$black};\n display: flex;\n flex-direction: column;\n min-height: 100vh;\n padding: 0;\n margin: 0;\n`\n\n\n\nconst Home = () => {\n const [movies, setMovies] = useState([])\nconst [loaded, setLoaded] = useState(false)\n//  checking if user has a uuid in the localstorage, if not create an uuid and set to localStorage. \n const checkLocalStorage = () => {\n  let userCode = localStorage.getItem('uuid')\n  if(userCode){\n   return null\n  }else{\n   userCode = v4()\n   const options = {\n    method: 'POST',\n    url: 'http://localhost:3000/users',\n    headers: {'Content-Type': 'application/json'},\n    data: {uuid: userCode}\n   }\n\n   localStorage.setItem('uuid', userCode)\n\n   // start loading animation here\n\n   axios.request(options).then((response) => {\n     console.log(response.data)\n     // stop loading animation here\n   }).catch((error) => console.log(error))\n  }\n }\n\n useEffect(() => {\n  checkLocalStorage()\n  setLoaded(true)\n }, [])\n\n // add movies to the state\n const configMovies = (backendData, rapidData) => {\n  if(backendData.length === 0){\n    let newData = [...rapidData]\n    newData.map(movie => {\n      movie['up_count'] = 0\n      movie['down_count'] = 0\n      movie['liked'] = false\n      movie['disliked'] = false\n    })\n    setMovies(newData)\n  }else{\n    let configedMovies = []\n    for(let i in rapidData){\n      let backendMovie = backendData.find(movie => movie['query'] === rapidData[i].id)\n      if(backendMovie){\n        let tempObj = {...rapidData[i]}\n        tempObj['up_count'] = backendMovie['up_count']\n        tempObj['down_count'] = backendMovie['down_count']\n        configedMovies.push(tempObj)\n      }else{\n        let tempObj = {...rapidData[i]}\n        tempObj['up_count'] = 0\n        tempObj['down_count'] = 0\n        configedMovies.push(tempObj)\n      }\n    }\n    setMovies(configedMovies)\n  }\n }\n\n//  update movie up count or down count\n const updateMovie = (c) => {\n  let movie = movies.find(movie => movie.id === c.query)\n  movie['up_count'] = c.up_count\n  movie['down_count'] = c.down_count\n  let newMovies = [...movies]\n  setMovies(newMovies)\n }\n\n const transition = useTransition( loaded, {\n  from: {opacity: 0},\n  enter: {opacity: 1}\n })\n\n return (\n  <Wrapper>\n\n    {transition((style, item) => \n      item ? <Header configMovies={configMovies}/> : null\n    )}\n    <Movies movies={movies} updateMovie={updateMovie}/>\n  </Wrapper>\n )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}