{"ast":null,"code":"var _jsxFileName = \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Movie from './Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  padding: 2rem 0;\n  line-height: 1.5;\n  margin: 2rem;\n  \n\n  @media(min-width: 576px){\n   .center{\n    display: flex;\n    justify-content: space-between; \n    flex-wrap: wrap;\n    padding: 0 4rem;\n    }\n\n    .movie{\n    flex: 0 0 calc(50% - 1rem);\n    margin-bottom: 1rem;\n    }\n   }\n\n   @media(min-width: 992px){\n   .movie{\n    flex: 0 0 calc(33.33% - 1rem);\n    margin-bottom: 1rem;\n   }\n  }\n\n  @media(min-width: 1170px){\n   .movie{\n    display: flex; \n    text-align: left;\n   }\n  }\n`;\n_c = Wrapper;\n\nconst Catalog = ({\n  movies,\n  updateMovie\n}) => {\n  _s();\n\n  const [userMovies, setUserMovies] = useState({}); // checking if any movie from the api, has been liked or disliked by user \n\n  const checkUserMovies = (liked, disliked, movies) => {\n    // queries are an unique string from the rapid api \n    let liked_queries = [];\n    let disliked_queries = [];\n    let newMovies = []; // console.log(liked, disliked, movies)\n\n    setUserMovies({\n      likes: liked,\n      dislikes: disliked\n    });\n\n    for (let i = 0; liked.length > i; i++) {\n      liked_queries.push(liked[i].movie.query);\n    }\n\n    for (let i = 0; disliked.length > i; i++) {\n      disliked_queries.push(disliked[i].movie.query);\n    }\n\n    for (let i = 0; movies.length > i; i++) {\n      if (liked_queries.includes(movies[i].id)) {\n        let temp = { ...movies[i]\n        };\n        temp['liked'] = true;\n        temp['disliked'] = false;\n        newMovies.push(temp);\n      } else if (disliked_queries.includes(movies[i].id)) {\n        let temp = { ...movies[i]\n        };\n        temp['disliked'] = true;\n        temp['liked'] = false;\n        newMovies.push(temp);\n      } else {\n        console.log(movies[i]);\n        let temp = { ...movies[i]\n        };\n        temp['liked'] = false;\n        temp['disliked'] = false;\n        newMovies.push(temp);\n      }\n    }\n\n    renderMovies(newMovies);\n  }; // getting movies liked and disliked by user from past\n\n\n  const getUserMovies = () => {\n    const uuid = localStorage.getItem('uuid');\n    const options = {\n      method: 'GET',\n      url: `http://localhost:3000/users/${uuid}/`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    axios.request(options).then(resp => {\n      checkUserMovies(resp.data.likes, resp.data.dislikes, movies);\n    }).catch(err => console.log(err));\n  }; // render movie component, after checking if user has liked  or disliked in the past. \n\n\n  const renderMovies = newMovies => {\n    console.log(newMovies);\n\n    if (newMovies.length > 0) {\n      return newMovies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        movie: movie,\n        className: \"movie\",\n        updateMovie: updateMovie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this));\n    }\n  };\n\n  useEffect(() => {\n    getUserMovies();\n  }, [movies]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: movies.length ? renderMovies() : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Catalog, \"uzzSmRndplRBFP2gZHzbwu7T9do=\");\n\n_c2 = Catalog;\nexport default Catalog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Catalog\");","map":{"version":3,"sources":["/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Movies.js"],"names":["React","useState","useEffect","axios","styled","Movie","Wrapper","div","Catalog","movies","updateMovie","userMovies","setUserMovies","checkUserMovies","liked","disliked","liked_queries","disliked_queries","newMovies","likes","dislikes","i","length","push","movie","query","includes","id","temp","console","log","renderMovies","getUserMovies","uuid","localStorage","getItem","options","method","url","headers","request","then","resp","data","catch","err","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport Movie from './Movie'\n\nconst Wrapper = styled.div`\n  padding: 2rem 0;\n  line-height: 1.5;\n  margin: 2rem;\n  \n\n  @media(min-width: 576px){\n   .center{\n    display: flex;\n    justify-content: space-between; \n    flex-wrap: wrap;\n    padding: 0 4rem;\n    }\n\n    .movie{\n    flex: 0 0 calc(50% - 1rem);\n    margin-bottom: 1rem;\n    }\n   }\n\n   @media(min-width: 992px){\n   .movie{\n    flex: 0 0 calc(33.33% - 1rem);\n    margin-bottom: 1rem;\n   }\n  }\n\n  @media(min-width: 1170px){\n   .movie{\n    display: flex; \n    text-align: left;\n   }\n  }\n`\n\n\nconst Catalog = ({movies, updateMovie}) => {\n  const [userMovies, setUserMovies] = useState({})\n\n\n  // checking if any movie from the api, has been liked or disliked by user \n  const checkUserMovies = (liked, disliked, movies) => {\n    // queries are an unique string from the rapid api \n    let liked_queries = []\n    let disliked_queries = []\n    let newMovies = []\n    // console.log(liked, disliked, movies)\n    setUserMovies({likes: liked, dislikes: disliked})\n\n    for(let i = 0; liked.length > i; i++){\n      liked_queries.push(liked[i].movie.query)\n    }\n\n    for(let i = 0; disliked.length > i; i++){\n      disliked_queries.push(disliked[i].movie.query)\n    }\n\n    for(let i = 0; movies.length > i; i++){\n      if(liked_queries.includes(movies[i].id)){\n        let temp = {...movies[i]}\n        temp['liked'] = true\n        temp['disliked'] = false\n        newMovies.push(temp)\n      }\n      else if(disliked_queries.includes(movies[i].id)){\n        let temp = {...movies[i]}\n        temp['disliked'] = true\n        temp['liked'] = false\n        newMovies.push(temp)\n      }\n      else{\n        console.log(movies[i])\n        let temp = {...movies[i]}\n        temp['liked'] = false\n        temp['disliked'] = false\n        newMovies.push(temp)\n      }\n    }\n    renderMovies(newMovies)\n  }\n\n  // getting movies liked and disliked by user from past\n const getUserMovies = () => {\n  const uuid = localStorage.getItem('uuid')\n  const options = {\n   method: 'GET',\n   url: `http://localhost:3000/users/${uuid}/`,\n   headers: {'Content-Type': 'application/json'},\n  }\n    axios.request(options).then((resp) =>{\n     checkUserMovies(resp.data.likes, resp.data.dislikes, movies)\n    }).catch((err) => console.log(err))\n }\n\n\n\n\n\n// render movie component, after checking if user has liked  or disliked in the past. \n const renderMovies = (newMovies) => {\n   console.log(newMovies)\n   if(newMovies.length > 0){\n     return newMovies.map( movie => \n      <Movie movie={movie} className=\"movie\" key={movie.id} updateMovie={updateMovie}/>\n     )\n   }\n }\n\n\nuseEffect(() => {\n  getUserMovies()\n}, [movies])\n\n return (\n  <Wrapper>\n  <div className=\"center\">\n   {movies.length ? renderMovies() : null}\n  </div>\n  </Wrapper>\n )\n}\n\nexport default Catalog\n"]},"metadata":{},"sourceType":"module"}