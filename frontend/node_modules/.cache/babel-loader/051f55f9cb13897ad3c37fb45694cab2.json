{"ast":null,"code":"import _slicedToArray from \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _get from \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { defineHidden, is, createInterpolator, eachProp, hasFluidValue, getFluidValue, each, isAnimatedString, useForceUpdate, useLayoutEffect, addFluidObserver, removeFluidObserver, raf, useOnce } from '@react-spring/shared';\nimport * as React from 'react';\nimport { forwardRef, useRef, useCallback, useEffect } from 'react';\nvar $node = Symbol.for('Animated:node');\n\nvar isAnimated = function isAnimated(value) {\n  return !!value && value[$node] === value;\n};\n\nvar getAnimated = function getAnimated(owner) {\n  return owner && owner[$node];\n};\n\nvar setAnimated = function setAnimated(owner, node) {\n  return defineHidden(owner, $node, node);\n};\n\nvar getPayload = function getPayload(owner) {\n  return owner && owner[$node] && owner[$node].getPayload();\n};\n\nvar Animated = /*#__PURE__*/function () {\n  function Animated() {\n    _classCallCheck(this, Animated);\n\n    setAnimated(this, this);\n  }\n\n  _createClass(Animated, [{\n    key: \"getPayload\",\n    value: function getPayload() {\n      return this.payload || [];\n    }\n  }]);\n\n  return Animated;\n}();\n\nvar AnimatedValue = /*#__PURE__*/function (_Animated) {\n  _inherits(AnimatedValue, _Animated);\n\n  var _super = _createSuper(AnimatedValue);\n\n  function AnimatedValue(_value) {\n    var _this;\n\n    _classCallCheck(this, AnimatedValue);\n\n    _this = _super.call(this);\n    _this.done = true;\n    _this.durationProgress = 0;\n    _this._value = _value;\n\n    if (is.num(_this._value)) {\n      _this.lastPosition = _this._value;\n    }\n\n    return _this;\n  }\n\n  _createClass(AnimatedValue, [{\n    key: \"getPayload\",\n    value: function getPayload() {\n      return [this];\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this._value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value, step) {\n      if (is.num(value)) {\n        this.lastPosition = value;\n\n        if (step) {\n          value = Math.round(value / step) * step;\n\n          if (this.done) {\n            this.lastPosition = value;\n          }\n        }\n      }\n\n      if (this._value === value) {\n        return false;\n      }\n\n      this._value = value;\n      return true;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var done = this.done;\n      this.done = false;\n\n      if (is.num(this._value)) {\n        this.elapsedTime = 0;\n        this.durationProgress = 0;\n        this.lastPosition = this._value;\n        if (done) this.lastVelocity = null;\n        this.v0 = null;\n      }\n    }\n  }], [{\n    key: \"create\",\n    value: function create(value) {\n      return new AnimatedValue(value);\n    }\n  }]);\n\n  return AnimatedValue;\n}(Animated);\n\nvar AnimatedString = /*#__PURE__*/function (_AnimatedValue) {\n  _inherits(AnimatedString, _AnimatedValue);\n\n  var _super2 = _createSuper(AnimatedString);\n\n  function AnimatedString(value) {\n    var _this2;\n\n    _classCallCheck(this, AnimatedString);\n\n    _this2 = _super2.call(this, 0);\n    _this2._string = null;\n    _this2._toString = createInterpolator({\n      output: [value, value]\n    });\n    return _this2;\n  }\n\n  _createClass(AnimatedString, [{\n    key: \"getValue\",\n    value: function getValue() {\n      var value = this._string;\n      return value == null ? this._string = this._toString(this._value) : value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      if (is.str(value)) {\n        if (value == this._string) {\n          return false;\n        }\n\n        this._string = value;\n        this._value = 1;\n      } else if (_get(_getPrototypeOf(AnimatedString.prototype), \"setValue\", this).call(this, value)) {\n        this._string = null;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(goal) {\n      if (goal) {\n        this._toString = createInterpolator({\n          output: [this.getValue(), goal]\n        });\n      }\n\n      this._value = 0;\n\n      _get(_getPrototypeOf(AnimatedString.prototype), \"reset\", this).call(this);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(value) {\n      return new AnimatedString(value);\n    }\n  }]);\n\n  return AnimatedString;\n}(AnimatedValue);\n\nvar TreeContext = {\n  dependencies: null\n};\n\nvar AnimatedObject = /*#__PURE__*/function (_Animated2) {\n  _inherits(AnimatedObject, _Animated2);\n\n  var _super3 = _createSuper(AnimatedObject);\n\n  function AnimatedObject(source) {\n    var _this3;\n\n    _classCallCheck(this, AnimatedObject);\n\n    _this3 = _super3.call(this);\n    _this3.source = source;\n\n    _this3.setValue(source);\n\n    return _this3;\n  }\n\n  _createClass(AnimatedObject, [{\n    key: \"getValue\",\n    value: function getValue(animated) {\n      var values = {};\n      eachProp(this.source, function (source, key) {\n        if (isAnimated(source)) {\n          values[key] = source.getValue(animated);\n        } else if (hasFluidValue(source)) {\n          values[key] = getFluidValue(source);\n        } else if (!animated) {\n          values[key] = source;\n        }\n      });\n      return values;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(source) {\n      this.source = source;\n      this.payload = this._makePayload(source);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.payload) {\n        each(this.payload, function (node) {\n          return node.reset();\n        });\n      }\n    }\n  }, {\n    key: \"_makePayload\",\n    value: function _makePayload(source) {\n      if (source) {\n        var payload = new Set();\n        eachProp(source, this._addToPayload, payload);\n        return Array.from(payload);\n      }\n    }\n  }, {\n    key: \"_addToPayload\",\n    value: function _addToPayload(source) {\n      var _this4 = this;\n\n      if (TreeContext.dependencies && hasFluidValue(source)) {\n        TreeContext.dependencies.add(source);\n      }\n\n      var payload = getPayload(source);\n\n      if (payload) {\n        each(payload, function (node) {\n          return _this4.add(node);\n        });\n      }\n    }\n  }]);\n\n  return AnimatedObject;\n}(Animated);\n\nvar AnimatedArray = /*#__PURE__*/function (_AnimatedObject) {\n  _inherits(AnimatedArray, _AnimatedObject);\n\n  var _super4 = _createSuper(AnimatedArray);\n\n  function AnimatedArray(source) {\n    _classCallCheck(this, AnimatedArray);\n\n    return _super4.call(this, source);\n  }\n\n  _createClass(AnimatedArray, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.source.map(function (node) {\n        return node.getValue();\n      });\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(source) {\n      var payload = this.getPayload();\n\n      if (source.length == payload.length) {\n        return payload.some(function (node, i) {\n          return node.setValue(source[i]);\n        });\n      }\n\n      _get(_getPrototypeOf(AnimatedArray.prototype), \"setValue\", this).call(this, source.map(makeAnimated));\n\n      return true;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(source) {\n      return new AnimatedArray(source);\n    }\n  }]);\n\n  return AnimatedArray;\n}(AnimatedObject);\n\nfunction makeAnimated(value) {\n  var nodeType = isAnimatedString(value) ? AnimatedString : AnimatedValue;\n  return nodeType.create(value);\n}\n\nfunction getAnimatedType(value) {\n  var parentNode = getAnimated(value);\n  return parentNode ? parentNode.constructor : is.arr(value) ? AnimatedArray : isAnimatedString(value) ? AnimatedString : AnimatedValue;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar withAnimated = function withAnimated(Component, host) {\n  var hasInstance = !is.fun(Component) || Component.prototype && Component.prototype.isReactComponent;\n  return forwardRef(function (givenProps, givenRef) {\n    var instanceRef = useRef(null);\n    var ref = hasInstance && useCallback(function (value) {\n      instanceRef.current = updateRef(givenRef, value);\n    }, [givenRef]);\n\n    var _getAnimatedState = getAnimatedState(givenProps, host),\n        _getAnimatedState2 = _slicedToArray(_getAnimatedState, 2),\n        props = _getAnimatedState2[0],\n        deps = _getAnimatedState2[1];\n\n    var forceUpdate = useForceUpdate();\n\n    var callback = function callback() {\n      var instance = instanceRef.current;\n\n      if (hasInstance && !instance) {\n        return;\n      }\n\n      var didUpdate = instance ? host.applyAnimatedValues(instance, props.getValue(true)) : false;\n\n      if (didUpdate === false) {\n        forceUpdate();\n      }\n    };\n\n    var observer = new PropsObserver(callback, deps);\n    var observerRef = useRef();\n    useLayoutEffect(function () {\n      var lastObserver = observerRef.current;\n      observerRef.current = observer;\n      each(deps, function (dep) {\n        return addFluidObserver(dep, observer);\n      });\n\n      if (lastObserver) {\n        each(lastObserver.deps, function (dep) {\n          return removeFluidObserver(dep, lastObserver);\n        });\n        raf.cancel(lastObserver.update);\n      }\n    });\n    useEffect(callback, []);\n    useOnce(function () {\n      return function () {\n        var observer = observerRef.current;\n        each(observer.deps, function (dep) {\n          return removeFluidObserver(dep, observer);\n        });\n      };\n    });\n    var usedProps = host.getComponentProps(props.getValue());\n    return React.createElement(Component, _extends({}, usedProps, {\n      ref: ref\n    }));\n  });\n};\n\nvar PropsObserver = /*#__PURE__*/function () {\n  function PropsObserver(update, deps) {\n    _classCallCheck(this, PropsObserver);\n\n    this.update = update;\n    this.deps = deps;\n  }\n\n  _createClass(PropsObserver, [{\n    key: \"eventObserved\",\n    value: function eventObserved(event) {\n      if (event.type == 'change') {\n        raf.write(this.update);\n      }\n    }\n  }]);\n\n  return PropsObserver;\n}();\n\nfunction getAnimatedState(props, host) {\n  var dependencies = new Set();\n  TreeContext.dependencies = dependencies;\n  if (props.style) props = _extends({}, props, {\n    style: host.createAnimatedStyle(props.style)\n  });\n  props = new AnimatedObject(props);\n  TreeContext.dependencies = null;\n  return [props, dependencies];\n}\n\nfunction updateRef(ref, value) {\n  if (ref) {\n    if (is.fun(ref)) ref(value);else ref.current = value;\n  }\n\n  return value;\n}\n\nvar cacheKey = Symbol.for('AnimatedComponent');\n\nvar createHost = function createHost(components) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$applyAnimatedVal = _ref.applyAnimatedValues,\n      _applyAnimatedValues = _ref$applyAnimatedVal === void 0 ? function () {\n    return false;\n  } : _ref$applyAnimatedVal,\n      _ref$createAnimatedSt = _ref.createAnimatedStyle,\n      _createAnimatedStyle = _ref$createAnimatedSt === void 0 ? function (style) {\n    return new AnimatedObject(style);\n  } : _ref$createAnimatedSt,\n      _ref$getComponentProp = _ref.getComponentProps,\n      _getComponentProps = _ref$getComponentProp === void 0 ? function (props) {\n    return props;\n  } : _ref$getComponentProp;\n\n  var hostConfig = {\n    applyAnimatedValues: _applyAnimatedValues,\n    createAnimatedStyle: _createAnimatedStyle,\n    getComponentProps: _getComponentProps\n  };\n\n  var animated = function animated(Component) {\n    var displayName = getDisplayName(Component) || 'Anonymous';\n\n    if (is.str(Component)) {\n      Component = animated[Component] || (animated[Component] = withAnimated(Component, hostConfig));\n    } else {\n      Component = Component[cacheKey] || (Component[cacheKey] = withAnimated(Component, hostConfig));\n    }\n\n    Component.displayName = \"Animated(\".concat(displayName, \")\");\n    return Component;\n  };\n\n  eachProp(components, function (Component, key) {\n    if (is.arr(components)) {\n      key = getDisplayName(Component);\n    }\n\n    animated[key] = animated(Component);\n  });\n  return {\n    animated: animated\n  };\n};\n\nvar getDisplayName = function getDisplayName(arg) {\n  return is.str(arg) ? arg : arg && is.str(arg.displayName) ? arg.displayName : is.fun(arg) && arg.name || null;\n};\n\nexport { Animated, AnimatedArray, AnimatedObject, AnimatedString, AnimatedValue, createHost, getAnimated, getAnimatedType, getPayload, isAnimated, setAnimated };","map":{"version":3,"sources":["/Users/keenanjones/Desktop/Projects/YearOne/frontend/node_modules/@react-spring/animated/dist/react-spring-animated.esm.js"],"names":["defineHidden","is","createInterpolator","eachProp","hasFluidValue","getFluidValue","each","isAnimatedString","useForceUpdate","useLayoutEffect","addFluidObserver","removeFluidObserver","raf","useOnce","React","forwardRef","useRef","useCallback","useEffect","$node","Symbol","for","isAnimated","value","getAnimated","owner","setAnimated","node","getPayload","Animated","payload","AnimatedValue","_value","done","durationProgress","num","lastPosition","step","Math","round","elapsedTime","lastVelocity","v0","AnimatedString","_string","_toString","output","str","goal","getValue","TreeContext","dependencies","AnimatedObject","source","setValue","animated","values","key","_makePayload","reset","Set","_addToPayload","Array","from","add","AnimatedArray","map","length","some","i","makeAnimated","nodeType","create","getAnimatedType","parentNode","constructor","arr","_extends","Object","assign","target","arguments","prototype","hasOwnProperty","call","apply","withAnimated","Component","host","hasInstance","fun","isReactComponent","givenProps","givenRef","instanceRef","ref","current","updateRef","getAnimatedState","props","deps","forceUpdate","callback","instance","didUpdate","applyAnimatedValues","observer","PropsObserver","observerRef","lastObserver","dep","cancel","update","usedProps","getComponentProps","createElement","event","type","write","style","createAnimatedStyle","cacheKey","createHost","components","_applyAnimatedValues","_createAnimatedStyle","_getComponentProps","hostConfig","displayName","getDisplayName","arg","name"],"mappings":"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","sourcesContent":["import { defineHidden, is, createInterpolator, eachProp, hasFluidValue, getFluidValue, each, isAnimatedString, useForceUpdate, useLayoutEffect, addFluidObserver, removeFluidObserver, raf, useOnce } from '@react-spring/shared';\nimport * as React from 'react';\nimport { forwardRef, useRef, useCallback, useEffect } from 'react';\n\nconst $node = Symbol.for('Animated:node');\nconst isAnimated = value => !!value && value[$node] === value;\nconst getAnimated = owner => owner && owner[$node];\nconst setAnimated = (owner, node) => defineHidden(owner, $node, node);\nconst getPayload = owner => owner && owner[$node] && owner[$node].getPayload();\nclass Animated {\n  constructor() {\n    setAnimated(this, this);\n  }\n\n  getPayload() {\n    return this.payload || [];\n  }\n\n}\n\nclass AnimatedValue extends Animated {\n  constructor(_value) {\n    super();\n    this.done = true;\n    this.durationProgress = 0;\n    this._value = _value;\n\n    if (is.num(this._value)) {\n      this.lastPosition = this._value;\n    }\n  }\n\n  static create(value) {\n    return new AnimatedValue(value);\n  }\n\n  getPayload() {\n    return [this];\n  }\n\n  getValue() {\n    return this._value;\n  }\n\n  setValue(value, step) {\n    if (is.num(value)) {\n      this.lastPosition = value;\n\n      if (step) {\n        value = Math.round(value / step) * step;\n\n        if (this.done) {\n          this.lastPosition = value;\n        }\n      }\n    }\n\n    if (this._value === value) {\n      return false;\n    }\n\n    this._value = value;\n    return true;\n  }\n\n  reset() {\n    const {\n      done\n    } = this;\n    this.done = false;\n\n    if (is.num(this._value)) {\n      this.elapsedTime = 0;\n      this.durationProgress = 0;\n      this.lastPosition = this._value;\n      if (done) this.lastVelocity = null;\n      this.v0 = null;\n    }\n  }\n\n}\n\nclass AnimatedString extends AnimatedValue {\n  constructor(value) {\n    super(0);\n    this._string = null;\n    this._toString = createInterpolator({\n      output: [value, value]\n    });\n  }\n\n  static create(value) {\n    return new AnimatedString(value);\n  }\n\n  getValue() {\n    let value = this._string;\n    return value == null ? this._string = this._toString(this._value) : value;\n  }\n\n  setValue(value) {\n    if (is.str(value)) {\n      if (value == this._string) {\n        return false;\n      }\n\n      this._string = value;\n      this._value = 1;\n    } else if (super.setValue(value)) {\n      this._string = null;\n    } else {\n      return false;\n    }\n\n    return true;\n  }\n\n  reset(goal) {\n    if (goal) {\n      this._toString = createInterpolator({\n        output: [this.getValue(), goal]\n      });\n    }\n\n    this._value = 0;\n    super.reset();\n  }\n\n}\n\nconst TreeContext = {\n  dependencies: null\n};\n\nclass AnimatedObject extends Animated {\n  constructor(source) {\n    super();\n    this.source = source;\n    this.setValue(source);\n  }\n\n  getValue(animated) {\n    const values = {};\n    eachProp(this.source, (source, key) => {\n      if (isAnimated(source)) {\n        values[key] = source.getValue(animated);\n      } else if (hasFluidValue(source)) {\n        values[key] = getFluidValue(source);\n      } else if (!animated) {\n        values[key] = source;\n      }\n    });\n    return values;\n  }\n\n  setValue(source) {\n    this.source = source;\n    this.payload = this._makePayload(source);\n  }\n\n  reset() {\n    if (this.payload) {\n      each(this.payload, node => node.reset());\n    }\n  }\n\n  _makePayload(source) {\n    if (source) {\n      const payload = new Set();\n      eachProp(source, this._addToPayload, payload);\n      return Array.from(payload);\n    }\n  }\n\n  _addToPayload(source) {\n    if (TreeContext.dependencies && hasFluidValue(source)) {\n      TreeContext.dependencies.add(source);\n    }\n\n    const payload = getPayload(source);\n\n    if (payload) {\n      each(payload, node => this.add(node));\n    }\n  }\n\n}\n\nclass AnimatedArray extends AnimatedObject {\n  constructor(source) {\n    super(source);\n  }\n\n  static create(source) {\n    return new AnimatedArray(source);\n  }\n\n  getValue() {\n    return this.source.map(node => node.getValue());\n  }\n\n  setValue(source) {\n    const payload = this.getPayload();\n\n    if (source.length == payload.length) {\n      return payload.some((node, i) => node.setValue(source[i]));\n    }\n\n    super.setValue(source.map(makeAnimated));\n    return true;\n  }\n\n}\n\nfunction makeAnimated(value) {\n  const nodeType = isAnimatedString(value) ? AnimatedString : AnimatedValue;\n  return nodeType.create(value);\n}\n\nfunction getAnimatedType(value) {\n  const parentNode = getAnimated(value);\n  return parentNode ? parentNode.constructor : is.arr(value) ? AnimatedArray : isAnimatedString(value) ? AnimatedString : AnimatedValue;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nconst withAnimated = (Component, host) => {\n  const hasInstance = !is.fun(Component) || Component.prototype && Component.prototype.isReactComponent;\n  return forwardRef((givenProps, givenRef) => {\n    const instanceRef = useRef(null);\n    const ref = hasInstance && useCallback(value => {\n      instanceRef.current = updateRef(givenRef, value);\n    }, [givenRef]);\n    const [props, deps] = getAnimatedState(givenProps, host);\n    const forceUpdate = useForceUpdate();\n\n    const callback = () => {\n      const instance = instanceRef.current;\n\n      if (hasInstance && !instance) {\n        return;\n      }\n\n      const didUpdate = instance ? host.applyAnimatedValues(instance, props.getValue(true)) : false;\n\n      if (didUpdate === false) {\n        forceUpdate();\n      }\n    };\n\n    const observer = new PropsObserver(callback, deps);\n    const observerRef = useRef();\n    useLayoutEffect(() => {\n      const lastObserver = observerRef.current;\n      observerRef.current = observer;\n      each(deps, dep => addFluidObserver(dep, observer));\n\n      if (lastObserver) {\n        each(lastObserver.deps, dep => removeFluidObserver(dep, lastObserver));\n        raf.cancel(lastObserver.update);\n      }\n    });\n    useEffect(callback, []);\n    useOnce(() => () => {\n      const observer = observerRef.current;\n      each(observer.deps, dep => removeFluidObserver(dep, observer));\n    });\n    const usedProps = host.getComponentProps(props.getValue());\n    return React.createElement(Component, _extends({}, usedProps, {\n      ref: ref\n    }));\n  });\n};\n\nclass PropsObserver {\n  constructor(update, deps) {\n    this.update = update;\n    this.deps = deps;\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      raf.write(this.update);\n    }\n  }\n\n}\n\nfunction getAnimatedState(props, host) {\n  const dependencies = new Set();\n  TreeContext.dependencies = dependencies;\n  if (props.style) props = _extends({}, props, {\n    style: host.createAnimatedStyle(props.style)\n  });\n  props = new AnimatedObject(props);\n  TreeContext.dependencies = null;\n  return [props, dependencies];\n}\n\nfunction updateRef(ref, value) {\n  if (ref) {\n    if (is.fun(ref)) ref(value);else ref.current = value;\n  }\n\n  return value;\n}\n\nconst cacheKey = Symbol.for('AnimatedComponent');\nconst createHost = (components, {\n  applyAnimatedValues: _applyAnimatedValues = () => false,\n  createAnimatedStyle: _createAnimatedStyle = style => new AnimatedObject(style),\n  getComponentProps: _getComponentProps = props => props\n} = {}) => {\n  const hostConfig = {\n    applyAnimatedValues: _applyAnimatedValues,\n    createAnimatedStyle: _createAnimatedStyle,\n    getComponentProps: _getComponentProps\n  };\n\n  const animated = Component => {\n    const displayName = getDisplayName(Component) || 'Anonymous';\n\n    if (is.str(Component)) {\n      Component = animated[Component] || (animated[Component] = withAnimated(Component, hostConfig));\n    } else {\n      Component = Component[cacheKey] || (Component[cacheKey] = withAnimated(Component, hostConfig));\n    }\n\n    Component.displayName = `Animated(${displayName})`;\n    return Component;\n  };\n\n  eachProp(components, (Component, key) => {\n    if (is.arr(components)) {\n      key = getDisplayName(Component);\n    }\n\n    animated[key] = animated(Component);\n  });\n  return {\n    animated\n  };\n};\n\nconst getDisplayName = arg => is.str(arg) ? arg : arg && is.str(arg.displayName) ? arg.displayName : is.fun(arg) && arg.name || null;\n\nexport { Animated, AnimatedArray, AnimatedObject, AnimatedString, AnimatedValue, createHost, getAnimated, getAnimatedType, getPayload, isAnimated, setAnimated };\n"]},"metadata":{},"sourceType":"module"}