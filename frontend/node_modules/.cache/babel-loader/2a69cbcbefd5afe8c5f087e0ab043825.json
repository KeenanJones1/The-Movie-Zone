{"ast":null,"code":"var _jsxFileName = \"/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Movie from './Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  padding: 2rem 0;\n  line-height: 1.5;\n  margin: 2rem;\n  \n\n  @media(min-width: 576px){\n   .center{\n    display: flex;\n    justify-content: space-between; \n    flex-wrap: wrap;\n    padding: 0 4rem;\n    }\n\n    .movie{\n    flex: 0 0 calc(50% - 1rem);\n    margin-bottom: 1rem;\n    }\n   }\n\n   @media(min-width: 992px){\n   .movie{\n    flex: 0 0 calc(33.33% - 1rem);\n    margin-bottom: 1rem;\n   }\n  }\n\n  @media(min-width: 1170px){\n   .movie{\n    display: flex; \n    text-align: left;\n   }\n  }\n`;\n_c = Wrapper;\n\nconst Catalog = ({\n  movies,\n  updateMovie\n}) => {\n  _s();\n\n  const [userMovies, setUserMovies] = useState({}); // checking if any movie from the api, has been liked or disliked by user \n\n  const checkUserMovies = (liked, disliked, movies) => {\n    // queries are an unique string from the rapid api \n    let liked_queries = [];\n    let disliked_queries = [];\n    let newMovies = [];\n    console.log(liked, disliked, movies);\n    setUserMovies({\n      likes: liked,\n      dislikes: disliked\n    });\n\n    for (let i = 0; liked.length > i; i++) {\n      liked_queries.push(liked[i].movie.query);\n    }\n\n    for (let i = 0; disliked.length > i; i++) {\n      disliked_queries.push(disliked[i].movie.query);\n    }\n\n    for (let i = 0; movies.length > i; i++) {\n      if (liked_queries.includes(movies[i].id)) {\n        let temp = { ...movies[i]\n        };\n        temp[i]['liked'] = true;\n        temp[i]['disliked'] = false;\n        newMovies.push(temp);\n      } else if (disliked_queries.includes(movies[i].id)) {\n        let temp = { ...movies[i]\n        };\n        temp[i]['disliked'] = true;\n        temp[i]['liked'] = false;\n        newMovies.push(temp);\n      } else {\n        let temp = { ...movies[i]\n        };\n        temp[i]['liked'] = false;\n        temp[i]['disliked'] = false;\n        newMovies.push(temp);\n      }\n    }\n\n    renderMovies(newMovies);\n  }; // getting movies liked and disliked by user from past\n\n\n  const getUserMovies = () => {\n    const uuid = localStorage.getItem('uuid');\n    const options = {\n      method: 'GET',\n      url: `http://localhost:3000/users/${uuid}/`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    axios.request(options).then(resp => {\n      checkUserMovies(resp.data.likes, resp.data.dislikes, movies);\n    }).catch(err => console.log(err));\n  }; // render movie component, after checking if user has liked  or disliked in the past. \n\n\n  const renderMovies = newMovies => {\n    console.log(newMovies); // if(!userMovies['likes'] || !userMovies['dislikes']){\n    //   // getUserMovies()\n    // }\n    // return movies.map(movie => \n    //   <Movie movie={movie} className=\"movie\" key={movie.id} updateMovie={updateMovie}/>\n    //  )\n  };\n\n  useEffect(() => {\n    getUserMovies();\n  }, [movies]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: movies.length ? renderMovies() : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Catalog, \"uzzSmRndplRBFP2gZHzbwu7T9do=\");\n\n_c2 = Catalog;\nexport default Catalog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Catalog\");","map":{"version":3,"sources":["/Users/keenanjones/Desktop/Projects/YearOne/frontend/src/components/Movies.js"],"names":["React","useState","useEffect","axios","styled","Movie","Wrapper","div","Catalog","movies","updateMovie","userMovies","setUserMovies","checkUserMovies","liked","disliked","liked_queries","disliked_queries","newMovies","console","log","likes","dislikes","i","length","push","movie","query","includes","id","temp","renderMovies","getUserMovies","uuid","localStorage","getItem","options","method","url","headers","request","then","resp","data","catch","err"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport Movie from './Movie'\n\nconst Wrapper = styled.div`\n  padding: 2rem 0;\n  line-height: 1.5;\n  margin: 2rem;\n  \n\n  @media(min-width: 576px){\n   .center{\n    display: flex;\n    justify-content: space-between; \n    flex-wrap: wrap;\n    padding: 0 4rem;\n    }\n\n    .movie{\n    flex: 0 0 calc(50% - 1rem);\n    margin-bottom: 1rem;\n    }\n   }\n\n   @media(min-width: 992px){\n   .movie{\n    flex: 0 0 calc(33.33% - 1rem);\n    margin-bottom: 1rem;\n   }\n  }\n\n  @media(min-width: 1170px){\n   .movie{\n    display: flex; \n    text-align: left;\n   }\n  }\n`\n\n\nconst Catalog = ({movies, updateMovie}) => {\n  const [userMovies, setUserMovies] = useState({})\n\n\n  // checking if any movie from the api, has been liked or disliked by user \n  const checkUserMovies = (liked, disliked, movies) => {\n    // queries are an unique string from the rapid api \n    let liked_queries = []\n    let disliked_queries = []\n    let newMovies = []\n    console.log(liked, disliked, movies)\n    setUserMovies({likes: liked, dislikes: disliked})\n\n    for(let i = 0; liked.length > i; i++){\n      liked_queries.push(liked[i].movie.query)\n    }\n\n    for(let i = 0; disliked.length > i; i++){\n      disliked_queries.push(disliked[i].movie.query)\n    }\n\n    for(let i = 0; movies.length > i; i++){\n      if(liked_queries.includes(movies[i].id)){\n        let temp = {...movies[i]}\n        temp[i]['liked'] = true\n        temp[i]['disliked'] = false\n        newMovies.push(temp)\n      }\n      else if(disliked_queries.includes(movies[i].id)){\n        let temp = {...movies[i]}\n        temp[i]['disliked'] = true\n        temp[i]['liked'] = false\n        newMovies.push(temp)\n      }\n      else{\n        let temp = {...movies[i]}\n        temp[i]['liked'] = false\n        temp[i]['disliked'] = false\n        newMovies.push(temp)\n      }\n    }\n    renderMovies(newMovies)\n  }\n\n  // getting movies liked and disliked by user from past\n const getUserMovies = () => {\n  const uuid = localStorage.getItem('uuid')\n  const options = {\n   method: 'GET',\n   url: `http://localhost:3000/users/${uuid}/`,\n   headers: {'Content-Type': 'application/json'},\n  }\n    axios.request(options).then((resp) =>{\n     checkUserMovies(resp.data.likes, resp.data.dislikes, movies)\n    }).catch((err) => console.log(err))\n }\n\n\n\n\n\n// render movie component, after checking if user has liked  or disliked in the past. \n const renderMovies = (newMovies) => {\n   console.log(newMovies)\n  // if(!userMovies['likes'] || !userMovies['dislikes']){\n  //   // getUserMovies()\n  // }\n  // return movies.map(movie => \n  //   <Movie movie={movie} className=\"movie\" key={movie.id} updateMovie={updateMovie}/>\n  //  )\n }\n\n\nuseEffect(() => {\n  getUserMovies()\n}, [movies])\n\n return (\n  <Wrapper>\n  <div className=\"center\">\n   {movies.length ? renderMovies() : null}\n  </div>\n  </Wrapper>\n )\n}\n\nexport default Catalog\n"]},"metadata":{},"sourceType":"module"}